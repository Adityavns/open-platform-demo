buildscript {
  repositories {
    gradlePluginPortal()
  }
  dependencies {
    classpath "com.diffplug.spotless:spotless-plugin-gradle:5.15.2"
  }
}

allprojects { p ->

  apply plugin: com.diffplug.gradle.spotless.SpotlessPlugin

  spotless {
    format 'misc', {
      target fileTree(projectDir) {
        include '*.gradle'
        include 'gradle/*.gradle'
        include 'src/**/*.html'
        include 'src/**/*.js'
        include 'src/**/*.css'
        include 'src/**/*.xml'
        include 'src/**/*.xsd'
        include 'src/**/*.jsp'
        exclude 'src/**/webapp/lib/*'
        exclude 'modules/**'
      }
      indentWithSpaces(2)
      trimTrailingWhitespace()
      endWithNewline()
    }
    format 'markdown', {
      target '**/*.md'
      indentWithSpaces(2)
      endWithNewline()
    }
    java {
      target fileTree(projectDir) {
        include 'src/*/java/**/*.java'
        if (p.file('src/main/resources/domains').exists()) {
          include 'build/src-gen/java/**/*.java'
        }
      }
      googleJavaFormat()
    }
  }

  if (p.file('src/main/resources/domains').exists()) {
    p.afterEvaluate {
      p.spotlessJava.dependsOn(p.generateCode)
    }
  }

  build.dependsOn 'spotlessApply'
}

task formatCode(dependsOn: ['licenseFormat', 'spotlessApply'])
